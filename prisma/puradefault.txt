// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  price     Int
  createdAt DateTime @default(now())
}

model Banten {
  id     Int     @id @default(autoincrement())
  nama   String?
  jumlah Int?
}

model Desa {
  id          Int       @id @default(autoincrement())
  nama        String?
  kecamatanId Int
  kecamatan   Kecamatan @relation(fields: [kecamatanId], references: [id])
  pura        Pura[]
}

model Kecamatan {
  id          Int       @id @default(autoincrement())
  kabupatenId Int
  nama        String
  desa        Desa[]
  kabupaten   Kabupaten @relation(fields: [kabupatenId], references: [id])
}

model Kabupaten {
  id         Int         @id @default(autoincrement())
  provinsiId Int
  nama       String
  kecamatan  Kecamatan[]
  provinsi   Provinsi    @relation(fields: [provinsiId], references: [id])
}

model Provinsi {
  id        Int         @id @default(autoincrement())
  nama      String
  kabupaten Kabupaten[]
}

model Role {
  id   Int    @id @default(autoincrement())
  nama String
  user User[]
}

model User {
  id          Int                  @id @default(autoincrement())
  roleId      Int
  role        Role                 @relation(fields: [roleId], references: [id])
  email       String               @unique
  password    String
  nama        String
  telepon     String
  otp         Int
  status      String               @default("tidak aktif")
  createdAt   DateTime             @default(now())
  updateAt    DateTime             @default(now())
  pura        Pura[]
  upacara     Upacara[]
  kegiatan    Kegiatan[]
  peninggalan Peninggalan[]
  pelinggih   Pelinggih[]
  userToken   User_refresh_token[]
}

model Pura {
  id            Int           @id @default(autoincrement())
  desaId        Int
  desa          Desa          @relation(fields: [desaId], references: [id])
  userId        Int
  user          User          @relation(fields: [userId], references: [id])
  nama          String
  kategori      String
  sejarah       String
  tahun_berdiri DateTime
  tanggal_input DateTime
  fungsi        String
  alamat        String
  piodalan      String
  pengusung     String
  palebahan     String
  sesuhunan     String
  kode_foto     String
  upacara       Upacara[]
  kegiatan      Kegiatan[]
  peninggalan   Peninggalan[]
  pelinggih     Pelinggih[]
  pengurus      Pengurus[]
}

model Upacara {
  id               Int      @id @default(autoincrement())
  puraId           Int
  pura             Pura     @relation(fields: [puraId], references: [id])
  userId           Int
  user             User     @relation(fields: [userId], references: [id])
  nama             String
  tanggal_mulai    DateTime
  tanggal_berakhir DateTime
  pamuput          String
  biaya            Int
  tanggal_input    DateTime
}

model Kegiatan {
  id               Int      @id @default(autoincrement())
  userId           Int
  user             User     @relation(fields: [userId], references: [id])
  puraId           Int
  pura             Pura     @relation(fields: [puraId], references: [id])
  nama             String
  keterangan       String
  tanggal_kegiatan DateTime
  tanggal_input    DateTime
}

model Peninggalan {
  id     Int  @id @default(autoincrement())
  puraId Int
  pura   Pura @relation(fields: [puraId], references: [id])
  userId Int
  user   User @relation(fields: [userId], references: [id])
}

model Pelinggih {
  id            Int      @id @default(autoincrement())
  puraId        Int
  pura          Pura     @relation(fields: [puraId], references: [id])
  userId        Int
  user          User     @relation(fields: [userId], references: [id])
  nama          String
  fungsi        String
  sejarah       String
  tahun         DateTime
  kode_foto     String
  tanggal_input DateTime
}

model Pengurus {
  id          Int      @id @default(autoincrement())
  puraId      Int
  pura        Pura     @relation(fields: [puraId], references: [id])
  nama        String
  jabatan     String
  tahun_awal  DateTime
  tahun_akhir DateTime
  status      String
  telepon     String?
  kode_foto   String
}

model User_refresh_token {
  id           Int      @id @default(autoincrement())
  refreshToken String   @db.VarChar(255)
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  ADMIN
  PRAJURU
}

enum CategoryBanten {
  PENGRESIKAN
  AYABAN
  PENGHARAPAN
  LAINNYA
}

enum CategoryPura {
  KAWITAN
  SWAGINA
  KAHYANGAN_DESA
  KAHYANGAN_JAGAT
}

enum Wuku {
  SINTA
  LANDEP
  UKIR
  KULANTIR
  TOLU
  GUMBREG
  WARIGA
  WARIGADEAN
  JULUNGWANGI
  SUNGSANG
  DUNGULAN
  KUNINGAN
  LANGKIR
  MEDANGSIA
  PUJUT
  PAHANG
  KRULUT
  MERAKIH
  TAMBIR
  MEDANGKUNGAN
  MATAL
  UYE
  MENAIL
  PRANGBAKAT
  BALA
  UGU
  WAYANG
  KLAWU
  DUKUT
  WATUGUNUNG
}

enum PancaWara {
  PAING
  PON
  WAGE
  KLIWON
  UMANIS
}

enum SaptaWara {
  REDITE
  SOMA
  ANGGARA
  BUDA
  WRASPATI
  SUKRA
  SANISCARA
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  password      String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  alamat        String?
  telepon       String?
  role          Role      @default(PRAJURU)

  puras     Pura[]
  userRoles UserRole[]
  accounts  Account[]
  sessions  Session[]
  kegiatans Kegiatan[]

  // pura
  upacaras     Upacara[]
  pratimas     Pratima[]
  pelinggihs   Pelinggih[]
  userTokens   User_refresh_token[]
  virtualTours VirtualTour[]
  bantens      Banten[]
}

model Pura {
  id           String       @id @default(cuid())
  name         String       @unique
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  userId       String
  desaId       String
  konten       Json?
  tahunBerdiri Int
  alamat       String
  wuku         Wuku
  pancaWara    PancaWara
  saptaWara    SaptaWara
  actived      Boolean      @default(false)
  kategori     CategoryPura
  thumbnail    String

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  desa         Desa          @relation(fields: [desaId], references: [id], onDelete: Cascade)
  kegiatans    Kegiatan[]
  subscribers  UserRole[]
  upacaras     Upacara[]
  pratimas     Pratima[]
  pelinggihs   Pelinggih[]
  virtualTours VirtualTour[]
  bantens      Banten[]

  @@index([name])
}

model UserRole {
  userId String
  puraId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  pura Pura @relation(fields: [puraId], references: [id], onDelete: Cascade)

  @@id([userId, puraId])
}

model Kegiatan {
  id        String   @id @default(cuid())
  title     String
  content   Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  puraId    String

  pura Pura @relation(fields: [puraId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Pratima {
  id             String   @id @default(cuid())
  nama           String
  konten         String?  @db.Text
  puraId         String
  userId         String
  tahunDitemukan Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  thumbnail      String

  pura Pura @relation(fields: [puraId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Pelinggih {
  id               String   @id @default(cuid())
  puraId           String
  userId           String
  nama             String
  konten           String?  @db.Text
  tahunPeninggalan Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  thumbnail        String

  pura Pura @relation(fields: [puraId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User_refresh_token {
  id           String   @id @default(cuid())
  refreshToken String   @db.VarChar(255)
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VirtualTour {
  id          String   @id @default(cuid())
  puraId      String
  userId      String
  virtualTour String
  nama        String
  thumbnail   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  pura Pura @relation(fields: [puraId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Banten {
  id        String         @id @default(cuid())
  thumbnail String?
  nama      String
  userId    String
  puraId    String
  kategori  CategoryBanten
  deskripsi String?        @db.Text
  komponen  String?        @db.Text
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  pura Pura @relation(fields: [puraId], references: [id], onDelete: Cascade)
}

model Upacara {
  id        String   @id @default(cuid())
  puraId    String
  userId    String
  nama      String
  thumbnail String
  biaya     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pura Pura @relation(fields: [puraId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// schema.prisma

model Desa {
  id          String    @id @default(cuid())
  desa        String?
  kecamatanId String
  kecamatan   Kecamatan @relation(fields: [kecamatanId], references: [id], onDelete: Cascade)
  pos         Int?
  puras       Pura[]
}

model Kecamatan {
  id          String    @id @default(cuid())
  kecamatan   String
  kabupatenId String
  desas       Desa[]
  kabupaten   Kabupaten @relation(fields: [kabupatenId], references: [id], onDelete: Cascade)
}

model Kabupaten {
  id         String      @id @default(cuid())
  kabupaten  String
  ibuKota    String
  provinsiId String
  kecamatans Kecamatan[]
  provinsi   Provinsi    @relation(fields: [provinsiId], references: [id], onDelete: Cascade)
}

model Provinsi {
  id         String      @id @default(cuid())
  provinsi   String
  kabupatens Kabupaten[]
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}
